version: '3.8'

services:
  d-vecdb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: d-vecdb-server
    ports:
      - "8080:8080"   # REST API
      - "9090:9090"   # gRPC API
      - "9091:9091"   # Prometheus metrics
    volumes:
      - ./data:/data
      - ./config.toml:/etc/vectordb/config.toml:ro
      - ./logs:/var/log/vectordb
    environment:
      - RUST_LOG=info
      - VECTORDB_HOST=0.0.0.0
      - VECTORDB_PORT=8080
      - VECTORDB_GRPC_PORT=9090
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: d-vecdb-prometheus
    ports:
      - "9092:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - d-vecdb
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: d-vecdb-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: d-vecdb-network