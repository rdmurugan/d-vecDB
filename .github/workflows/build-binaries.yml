name: Build Cross-Platform Binaries

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: vectordb-server-linux-x64
          - target: x86_64-apple-darwin
            os: macos-latest
            name: vectordb-server-darwin-x64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: vectordb-server-darwin-arm64
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            name: vectordb-server-windows-x64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} --bin vectordb-server

      - name: Copy binary to Python package
        shell: bash
        run: |
          mkdir -p d-vecdb-server-python/d_vecdb_server/binaries/
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/vectordb-server.exe d-vecdb-server-python/d_vecdb_server/binaries/${{ matrix.name }}
          else
            cp target/${{ matrix.target }}/release/vectordb-server d-vecdb-server-python/d_vecdb_server/binaries/${{ matrix.name }}
          fi

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: d-vecdb-server-python/d_vecdb_server/binaries/${{ matrix.name }}

  package:
    name: Create Python Package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Copy binaries to package
        run: |
          mkdir -p d-vecdb-server-python/d_vecdb_server/binaries/
          find artifacts/ -name "vectordb-server-*" -exec cp {} d-vecdb-server-python/d_vecdb_server/binaries/ \;
          ls -la d-vecdb-server-python/d_vecdb_server/binaries/

      - name: Build Python package
        run: |
          cd d-vecdb-server-python
          python -m pip install build
          python -m build

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: d-vecdb-server-python/dist/*